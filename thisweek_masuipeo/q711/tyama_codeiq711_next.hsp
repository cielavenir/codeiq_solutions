#module
#deffunc reverse array a_,int start_,int size_
	end_=start_+size_-1
	i_=0
*loop_i
	if i_>size_/2-1: goto *loop_iend
	z_=a_(start_+i_)
	a_(start_+i_)=a_(end_-i_)
	a_(end_-i_)=z_
	i_++
	goto *loop_i
*loop_iend
	return

#defcfunc next_permutation array a_,int n_
	if n_<0||length(a_)<n_ : return 0
	i_=0
	reverse a_,n_,length(a_)-n_
	i_=length(a_)-2
*loop_k
	if i_<0: goto *loop_kend
	if a_(i_)<a_(i_+1): goto *loop_kend
	i_--
	goto *loop_k
*loop_kend
	if i_<0{
		reverse a_,0,length(a_)
		return 0
	}
	k_=i_
	i_=length(a_)-1
*loop_l
	if i_<k_+1: goto *loop_lend
	if a_(k_)<a_(i_): goto *loop_lend
	i_--
	goto *loop_l
*loop_lend
	l_=i_
	z_=a_(k_):a_(k_)=a_(l_):a_(l_)=z_
	reverse a_,k_+1,length(a_)-(k_+1)
	return 1

#global
N=6
dim e0,N*2
dim f0,N*2
i=0
*loop_i
	if i==N: goto *loop_iend
	e0(N+i)=1
	f0(N+i)=1
	i++
	goto *loop_i
*loop_iend
;sort e0,f0 ;not required, since we have already sorted form
r=0
*loop_e0
*loop_f0
	flg=0
	zero1=0
	zero2=N
	one1=0
	one2=N
	i=0
*loop_i_
	if i==N*2: goto *loop_i_end
	if e0(i)==0: zero1++
	if e0(i)==1: one1++
	if f0(N*2-1-i)==0: zero2--
	if f0(N*2-1-i)==1: one2--
	if zero1==zero2: flg++
	if one1==one2: flg++
	i+=1
	goto *loop_i_
*loop_i_end
	if flg>=2: r++
	z=next_permutation(f0,length(f0))
	if z=0: goto *loop_f0end
	goto *loop_f0
*loop_f0end
	z=next_permutation(e0,length(e0))
	if z=0: goto *loop_e0end
	goto *loop_e0
*loop_e0end
mes r
end