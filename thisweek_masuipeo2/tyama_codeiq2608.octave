global W=10
global H=7
global broken=0;
global pins=zeros(1,W * H);

function retval=check(temp)
	global W H broken pins
	connect=zeros(1,W * H);
	remain=0;
	single=0;
	for i=0:(W*H-1)
		if temp(i+1) == 0
			if (mod(i,W) != 0) && (temp(i - 1+1) == 0)
				connect(i+1) += 1;
			endif
			if ((mod(i,W) != W - 1) && (temp(i + 1+1) == 0))
				connect(i+1) += 1;
			endif
			if ((idivide(i,W,"floor") != 0) && (temp(i - W+1) == 0))
				connect(i+1) += 1;
			endif
			if ((idivide(i,W,"floor") != H - 1) && (temp(i + W+1) == 0))
				connect(i+1) += 1;
			endif
			remain+=1;
			if (connect(i+1) == 1)
				single += 1;
			endif
		endif
	endfor
	if single > 0
		for i=0:(W*H-1)
			if ((connect(i+1) == 1) && (temp(i+1) == 0))
				temp(i+1) = 1;
				if ((mod(i,W) != 0) && (temp(i - 1+1) == 0))
					temp(i - 1+1) = 1;
				elseif ((mod(i,W) != W - 1) && (temp(i + 1+1) == 0))
					temp(i + 1+1) = 1;
				elseif ((idivide(i,W,"floor") != 0) && (temp(i - W+1) == 0))
					temp(i - W+1) = 1;
				elseif ((idivide(i,W,"floor") != H - 1) && (temp(i + W+1) == 0))
					temp(i + W+1) = 1;
				else
					retval=1;
					return;
				endif
			endif
		endfor
		retval=check(temp);
	else
		retval=remain;
	endif
endfunction

function search(pos,depth)
	global W H broken pins
	if depth == 0
		temp=pins;
		if(check(temp) == 0)
			printf("count = %d\n", broken);
			exit(0);
		endif
	else
		if pos == W * H
		else
			if pins(pos+1) == 0
				if ((mod(pos,W) < W - 1) && (pins(pos + 1+1) == 0))
					pins(pos+1) = pins(pos + 1+1) = 1;
					search(pos, depth - 1);
					pins(pos+1) = pins(pos + 1+1) = 0;
				endif
				if ((idivide(pos,W,"floor") < H - 1) && (pins(pos + W+1) == 0))
					pins(pos+1) = pins(pos + W+1) = 1;
					search(pos, depth - 1);
					pins(pos+1) = pins(pos + W+1) = 0;
				endif
			endif
			search(pos + 1, depth);
		endif
	endif
endfunction

for broken = 0:(W*H-1)
	printf("[*] %d\n",broken)
	search(0, broken);
endfor