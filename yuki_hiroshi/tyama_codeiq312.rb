#!/usr/bin/ruby
#http://oeis.org/A014480
N=10
puts (1<<N-1).times.flat_map{|i|[n=i^i>>1,n^((1<<N)-1)]}.rotate.map{|e|"%0#{N}b"%e}
#puts 512.times.flat_map{|i|[n=i^i>>1,n^1023]}.rotate.map{|e|"%010b"%e}
#a=[];(1<<N-1).times{|i|a+=[n=i^i>>1,n^((1<<N)-1)]};a.rotate.each{|e|puts"%0#{N}b"%e}
__END__
ENV: Ruby (73bytes in Golf mode)
重複しない範囲でハミング距離ができるだけ大きくなるようなシーケンスを作成すれば良い。
そこで思い出されるのは、グレイコードが題材であったBits問題である。
グレイコードのシーケンスは(隣接する項の)ハミング距離が必ず1となる特徴を持っている。これは最小である。
そこでグレイコードを1ビット少ない範囲(今回は9ビット)で列挙し、それと1111111111とのxorを結合すれば、10/9/10/9/...というハミング距離が得られると考えた。
0が先頭に来てしまうので、問題文に従って後ろに回した。
3ビットの場合は(3+2)*(1<<2)=20、10ビットの場合は(10+9)*(1<<9)=9728が最高点である。

【解の上界の証明】
9728(=10*512+9*512)点を越える解答があると仮定すると、1024個のパターンのうち、513個以上が10トグルでなければならない。
しかし、それは最低でも連続する2つのパターンが10トグルであることを意味する。
10トグルが連続するということは同じパターンが出現することを意味するので、これは不合理である。
したがって9728点を越える解答は存在しない。

※以上と9728点の解答が存在するという事実より、9728点が最高点であることが示された。